.form-group {
  margin-bottom: 24px;
  position: relative;

  &:has(> input:required) label::after,
  &:has(> select:required) label::after {
    content: "*";
    color: var(--icon-on-danger-secondary);
  }
}

.form-control, trix-editor, trix-toolbar {
  background-color: var(--base-bg-low);
  border: 1px solid var(--base-border-tertiary);
  border-radius: 6px;
  box-shadow: 0px 1px 2px 0px rgba(0, 0, 0, 0.05);
  color: var(--base-text-secondary);
  display: block;
  font-size: 14px;
  font-weight: 400;
  line-height: 22px;
  padding: 6px 12px;
  width: 100%;

  &::placeholder {
    color: var(--base-text-tertiary);
  }

  &:focus,
  &:focus-visible {
    box-shadow: inset 0 0 0 1px var(--border-primary-hover);
    border: 1px solid var(--border-primary-hover);
  }

  &.error {
    background: var(--bg-danger-secondary);
    box-shadow: inset 0 0 0 1px var(--border-danger);
    border: 1px solid var(--border-danger);
    color: var(--text-on-danger-secondary);

    &:focus,
    &:focus-visible {
      background: var(--base-bg-low);
    }
  }

  &[disabled],
  &[readonly] {
    background: var(--bg-disabled);
    border: 1px solid var(--border-disabled);
    color: var(--base-text-tertiary);
    cursor: not-allowed;
  }
}

trix-toolbar {
  border-bottom-left-radius: 0;
  border-bottom-right-radius: 0;
  border-bottom: 0;
}

trix-editor {
  border-top-left-radius: 0;
  border-top-right-radius: 0;
}

select {
  background-color: var(--base-bg-low);
  border: 1px solid var(--base-border-tertiary);
  border-radius: 6px;
  box-shadow: 0px 1px 2px 0px rgba(0, 0, 0, 0.05);
  cursor: pointer;
  font-size: 14px;
  line-height: 22px;
  padding: 6px 0px;
  width: 100%;

  &[disabled],
  &[read-only] {
    background-color: var(--bg-disabled);
    border: 1px solid var(--border-disabled);
    color: var(--base-text-tertiary);
    cursor: not-allowed;
  }

  &:focus,
  &:focus-visible {
    box-shadow: inset 0 0 0 1px var(--border-primary-hover);
    border: 1px solid var(--border-primary-hover);
  }
}

select:not([multiple]) {
  padding-left: 12px;
}

select[multiple] {
  background: var(--base-bg-low);
  border: 1px solid var(--base-border-tertiary);
  border-radius: 6px;
  box-shadow: 0px 1px 2px 0px rgba(0, 0, 0, 0.05);
  padding: 6px 0px;
  width: 100%;

  &::placeholder {
    color: var(--base-text-tertiary);
  }

  &:focus,
  &:focus-visible {
    box-shadow: inset 0 0 0 1px var(--border-primary-hover);
    border: 1px solid var(--border-primary-hover);
  }

  &.error {
    background: var(--bg-danger-secondary);
    box-shadow: inset 0 0 0 1px var(--border-danger);
    border: 1px solid var(--border-danger);
    color: var(--text-on-danger-secondary);

    &:focus,
    &:focus-visible {
      background: var(--base-bg-low);
    }
  }

  &[disabled],
  &[read-only] {
    background: var(--bg-disabled);
    border: 1px solid var(--border-disabled);
    color: var(--base-text-tertiary);
    cursor: not-allowed;
  }

  option {
    color: var(--text-on-secondary);
    font-size: 14px;
    font-weight: 400;
    line-height: 24px;
    padding: 4px 12px;

    &[selected] {
      background: var(--bg-disabled-secondary);
    }
  }
}

label,
.label {
  color: var(--base-text-secondary);
  display: block;
  font-size: 14px;
  font-weight: 500;
  line-height: 20px;
  margin-bottom: 5px;
}

.form-hint {
  color: var(--base-text-secondary);
  font-size: 12px;
  font-weight: 400;
  line-height: 16px;
  margin-top: 4px;

  &.error {
    color: var(--text-danger);
    display: flex;
    align-items: center;

    &::before {
      content: "";
      display: inline-block;
      width: 16px;
      height: 16px;
      background-color: var(--icon-on-danger-secondary);
      mask-image: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 16 16" fill="none"><path fill-rule="evenodd" clip-rule="evenodd" d="M6.70013 2.25C7.27749 1.25 8.72086 1.25 9.29821 2.25L14.4944 11.25C15.0717 12.25 14.35 13.5 13.1953 13.5H2.80302C1.64832 13.5 0.926631 12.25 1.50398 11.25L6.70013 2.25ZM7.99917 4C8.41338 4 8.74917 4.33579 8.74917 4.75V7.75C8.74917 8.16421 8.41338 8.5 7.99917 8.5C7.58496 8.5 7.24917 8.16421 7.24917 7.75V4.75C7.24917 4.33579 7.58496 4 7.99917 4ZM7.99917 12C8.55146 12 8.99917 11.5523 8.99917 11C8.99917 10.4477 8.55146 10 7.99917 10C7.44689 10 6.99917 10.4477 6.99917 11C6.99917 11.5523 7.44689 12 7.99917 12Z" fill="#DC2626"/></svg>');
      mask-size: contain;
      mask-repeat: no-repeat;
      mask-position: center;
    }
  }
}

.caret {
  pointer-events: none;
  position: absolute;
  top: 0px;
  bottom: 0px;
  right: 0px;
  display: flex;
  align-items: center;
  padding-left: 8px;
  padding-right: 8px;
  color: var(--text-on-secondary);
}

form.inline {
  .form-group,
  .file-input-group {
    display: flex;
    flex-wrap: wrap;
    justify-content: flex-start;
    align-items: center;
  }

  .form-group .input {
    flex: 1 1 0%;
  }

  .form-group .label {
    width: 25%;
  }
}

/* Checkboxes, Radio Buttons, and Switches/Toggles */
.form-picker-group {
  display: flex;
  align-items: flex-start;
  gap: 8px;

  input[type="checkbox"],
  input[type='radio'] {
    margin-top: 4px;
  }

  label {
    display: block;
    margin-bottom: 0px;
    color: var(--base-text);
    font-size: 14px;
    font-weight: 400;
    line-height: 24px;
  }

  &:has(> .form-checkbox:disabled) label,
  &:has(> .form-checkbox:disabled) p,
  &:has(> [type="checkbox"]:disabled) label,
  &:has(> [type="checkbox"]:disabled) p,
  &:has(> .form-radio:disabled) label,
  &:has(> .form-radio:disabled) p,
  &:has(> [type="radio"]:disabled) label,
  &:has(> [type="radio"]:disabled) p {
    color: var(--base-text-disabled);
    cursor: not-allowed;
  }

  &.switch,
  &.toggle {
    &:has(> .form-checkbox:disabled) label,
    &:has(> [type="checkbox"]:disabled) label,
    &:has(> [type="radio"]:disabled) label {
      color: var(--base-text-disabled);
      cursor: not-allowed;
    }

    &:has(> .form-checkbox:disabled) label::before,
    &:has(> [type="checkbox"]:disabled) label::before,
    &:has(> [type="radio"]:disabled) label::before {
      background: var(--bg-disabled-secondary);
      cursor: not-allowed;
    }

    &:has(> .form-checkbox:disabled) label::after,
    &:has(> [type="checkbox"]:disabled) label::after,
    &:has(> [type="radio"]:disabled) label::after {
      background: var(--bg-disabled);
      cursor: not-allowed;
    }

    &:has(> .form-checkbox:disabled:checked) label::before,
    &:has(> [type="checkbox"]:disabled:checked) label::before,
    &:has(> [type="radio"]:disabled:checked) label::before {
      background: var(--bg-disabled-selected);
      cursor: not-allowed;
    }
  }
}

.switch,
.toggle {
  position: relative;

  input[type="checkbox"],
  input[type="radio"] {
    position: absolute;
    top: 2;
    left: 0;
    opacity: 0;

    &:checked {
      + label,
      + div label {
        &::before {
          background: var(--bg-primary);
        }

        &::after {
          transform: translateX(26px);
        }
      }
    }
  }

  label {
    position: relative;
    padding-left: 64px;

    &:hover {
      cursor: pointer;
    }

    &:focus::before,
    &:focus-visible::before {
      outline: 2px solid var(--base-border-focus);
      outline-offset: 2px;
    }

    &::before {
      background: var(--base-bg-highest);
      position: absolute;
      top: 0;
      left: 0;
      height: 24px;
      width: 50px;
      content: "";
      border-radius: 24px;
      transition-property: color, background-color, border-color, text-decoration-color, fill, stroke;
      transition-timing-function: cubic-bezier(0.4, 0, 1, 1);
      transition-duration: 200ms;
    }

    &::after {
      position: absolute;
      top: 2px;
      left: 2px;
      width: 20px;
      height: 20px;
      box-shadow: 0px 1px 2px 0px rgba(0, 0, 0, 0.05);
      background: var(--base-bg-low);
      border-radius: 9999px;
      content: "";
      transition-property: transform;
      transition-timing-function: cubic-bezier(0.4, 0, 1, 1);
      transition-duration: 200ms;
    }
  }

  p {
    position: relative;
    padding-left: 64px;
  }
}

.switch-right,
.toggle-right {
  position: relative;

  input[type="checkbox"],
  input[type="radio"] {
    position: absolute;
    top: 2px;
    left: 120px;
    opacity: 0;
  }

  &:has( .form-checkbox:checked) label,
  &:has( [type="checkbox"]:checked) label,
  &:has( [type="radio"]:checked) label {
    &::before {
      background: var(--bg-primary);
    }

    &::after {
      transform: translateX(26px);
    }
  }

  label {
    position: relative;
    padding-right: 64px;

    &:hover {
      cursor: pointer;
    }

    &:focus::before,
    &:focus-visible::before {
      outline: 2px solid var(--base-border-focus);
      outline-offset: 2px;
    }

    &::before {
      background: var(--base-bg-highest);
      position: absolute;
      top: 0;
      right: 0;
      height: 24px;
      width: 50px;
      content: "";
      border-radius: 24px;
      transition-property: color, background-color, border-color, text-decoration-color, fill, stroke;
      transition-timing-function: cubic-bezier(0.4, 0, 1, 1);
      transition-duration: 200ms;
    }

    &::after {
      position: absolute;
      top: 2px;
      right: 28px;
      width: 20px;
      height: 20px;
      box-shadow: 0px 1px 2px 0px rgba(0, 0, 0, 0.05);
      background: var(--base-bg-low);
      border-radius: 9999px;
      content: "";
      transition-property: transform;
      transition-timing-function: cubic-bezier(0.4, 0, 1, 1);
      transition-duration: 200ms;
    }
  }

  p {
    position: relative;
    padding-right: 64px;
  }
}

.form-checkbox,
[type="checkbox"],
.form-radio,
[type='radio'] {
  background-color: var(--base-bg-base);
  border: 1px solid var(--base-border-secondary);
  cursor: pointer;
  margin-bottom: 0;

  &:focus,
  &:focus-visible {
    outline: 2px solid var(--base-border-focus);
    outline-offset: 2px;
  }

  &:checked {
    background-color: var(--bg-primary);
  }

  &:not(:checked):hover {
    border: 2px solid var(--border-primary);
  }

  &:disabled {
    border: 1px solid var(--border-disabled);
    background-color: var(--bg-disabled-selected);
    cursor: not-allowed;

    &:checked,
    &:checked:hover {
      border: 4px solid var(--bg-disabled-selected);
    }

    &:hover {
      border: 1px solid var(--border-disabled);
    }
  }
}

.form-checkbox,
[type="checkbox"] {
  border-radius: 4px;
}

/*File Inputs*/
.file-input-group {
  p.label {
    font-size: 14px;
    font-weight: 500;
    line-height: 20px;
    color: var(--base-text-secondary);

    span {
      font-size: 14px;
      font-weight: 400;
      line-height: 21px;
      color: var(--icon-on-danger-secondary);
    }
  }

  &:has(> [type="file"]:required) p.label::after {
    content: "*";
    color: var(--icon-on-danger-secondary);
    margin-left: -2px;
  }

  &:has(> [type="file"]:disabled) label,
  &:has(> [type="file"]:disabled) p {
    opacity: 0.6;
    cursor: not-allowed;
  }

  input[type="file"] {
    cursor: pointer;
    opacity: 0;
    display: inline-block;
    overflow: hidden;
    position: absolute;
    width: 1px;
    height: auto;
  }

  label {
    font-size: 14px;
    font-weight: 600;
    text-align: center;
    line-height: 20px;
    transition: ease 0.3s background, ease 0.3s transform, ease 0.2s color;
  }
}

.input-file {
  cursor: pointer;
  opacity: 0;
  display: inline-block;
  overflow: hidden;
  position: absolute;
  width: 1px;
  height: auto;

  + label {
    font-size: 14px;
    font-weight: 600;
    text-align: center;
    line-height: 20px;
    transition: ease 0.3s background, ease 0.3s transform, ease 0.2s color;
  }
}

/* Hotwire Combobox */
:root {
  --hw-active-bg-color: #F3F4F6;
  --hw-border-color: #D1D5DB;
  --hw-component-bg-color: #FFFFFF;
  --hw-group-color: #57595C;
  --hw-group-bg-color: #FFFFFF;
  --hw-invalid-color: #EF4444;
  --hw-dialog-label-color: #1D1D1D;
  --hw-focus-color: #2563EB;
  --hw-option-bg-color: #FFFFFF;

  --hw-border-radius: 0.375rem;
  --hw-border-width--slim: 1px;
  --hw-border-width--thick: 2px;

  --hw-combobox-width: 10rem;
  --hw-combobox-width--multiple: 30rem;

  --hw-dialog-font-size: 1.25rem;
  --hw-dialog-input-height: 2.5rem;
  --hw-dialog-label-alignment: center;
  --hw-dialog-label-padding: 0.5rem 0 0.375rem;
  --hw-dialog-label-size: 1.05rem;
  --hw-dialog-listbox-margin: 1.25rem 0 0;
  --hw-dialog-padding: 1rem 1rem 0;
  --hw-dialog-top-offset: 18vh;

  --hw-font-size: 1rem;

  --hw-handle-image: url("data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3E%3Cpath stroke='%236b7280' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='m6 8 4 4 4-4'/%3E%3C/svg%3E");
  --hw-handle-image--queried: url("data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 24 24'%3E%3Cpath stroke='%236b7280' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M6 18 18 6M6 6l12 12'/%3E%3C/svg%3E");
  --hw-handle-offset-right: 0.375rem;
  --hw-handle-width: 1.5rem;
  --hw-handle-width--queried: 1rem;

  --hw-line-height: 1.5rem;
  --hw-line-height--multiple: 2.125rem;

  --hw-listbox-height: calc(var(--hw-line-height) * 10);
  --hw-listbox-z-index: 10;

  --hw-padding--slimmer: 0.25rem;
  --hw-padding--slim: 0.375rem;
  --hw-padding--thick: 0.75rem;

  --hw-selection-chip-font-size: 0.875rem;

  --hw-visual-viewport-height: 100vh;
}

.dark {
  --hw-component-bg-color: var(--base-bg-low);
  --hw-border-color: var(--base-border-tertiary);
  --hw-option-bg-color: var(--base-bg-low);
  --hw-active-bg-color: var(--bg-primary);
}

.hw-combobox {
  border-width: 0;
  display: inline-flex;
  flex-direction: column;
  font-size: var(--hw-font-size);
  gap: var(--hw-padding--slim);
  margin: 0;
  padding: 0;
  position: relative;

  &, * {
    box-sizing: border-box;
  }
}

.hw-combobox__main__wrapper {
  background-color: var(--hw-component-bg-color);
  border: var(--hw-border-width--slim) solid var(--hw-border-color);
  border-radius: var(--hw-border-radius);
  padding: var(--hw-padding--slim) calc(var(--hw-handle-width) + var(--hw-padding--slimmer)) var(--hw-padding--slim) var(--hw-padding--thick);
  position: relative;
  /* width: var(--hw-combobox-width); */

  &:focus-within {
    box-shadow: 0 0 0 var(--hw-border-width--thick) var(--hw-focus-color);
  }

  &:has(.hw-combobox__input--invalid) {
    box-shadow: 0 0 0 var(--hw-border-width--thick) var(--hw-invalid-color);
  }
}

.hw-combobox__input {
  border: none;
  background-color: var(--hw-component-bg-color);
  font-size: inherit;
  line-height: var(--hw-line-height);
  min-width: 0;
  padding: 0;
  text-overflow: ellipsis;
  width: 100%;
}

.hw-combobox__input:focus,
.hw-combobox__input:focus-visible,
.hw-combobox__input:focus-within {
  box-shadow: none;
  outline: none;
}

.hw-combobox__handle {
  height: 100%;
  position: absolute;
  right: var(--hw-handle-offset-right);
  top: 0;
  width: var(--hw-handle-width);
}

.hw-combobox__handle::before {
  background-image: var(--hw-handle-image);
  background-position: center;
  background-repeat: no-repeat;
  background-size: var(--hw-handle-width);
  bottom: 0;
  content: '';
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
}

.hw-combobox__input[data-queried] + .hw-combobox__handle::before {
  background-image: var(--hw-handle-image--queried);
  background-size: var(--hw-handle-width--queried);
}

.hw-combobox__listbox {
  border-color: transparent;
  border-radius: var(--hw-border-radius);
  border-style: solid;
  border-width: var(--hw-border-width--slim);
  left: 0;
  line-height: var(--hw-line-height);
  list-style: none;
  margin: 0;
  max-height: var(--hw-listbox-height);
  overflow: auto;
  padding: 0;
  position: absolute;
  top: calc(100% + 0.2rem);
  width: 100%;
  z-index: var(--hw-listbox-z-index);

  &:has([role="option"]:not([hidden])) {
    border-color: var(--hw-border-color);
  }
}

.hw-combobox__group {
  display: none;
  padding: 0;
}

.hw-combobox__group__label {
  background-color: var(--hw-group-bg-color);
  color: var(--hw-group-color);
  padding: var(--hw-padding--slim);
}

.hw-combobox__group:has(.hw-combobox__option:not([hidden])) {
  display: block;
}

.hw-combobox__option {
  background-color: var(--hw-option-bg-color);
  padding: var(--hw-padding--slim) var(--hw-padding--thick);
  user-select: none;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.hw-combobox__option--blank {
  border-bottom: var(--hw-border-width--slim) solid var(--hw-border-color);
}

.hw-combobox__option:hover,
.hw-combobox__option--navigated,
.hw-combobox__option--selected {
  background-color: var(--hw-active-bg-color);
}

.hw-combobox__dialog__wrapper {
  display: none;
  height: 100vh;
  inset-inline-start: 0;
  pointer-events: none;
  position: fixed;
  top: 0;
  width: 100%;

  &:has([open]) {
    display: flex;
  }
}

.hw-combobox__dialog {
  border: 0;
  font-size: var(--hw-dialog-font-size);
  height: auto;
  margin: 0;
  max-height: calc(var(--hw-visual-viewport-height) - var(--hw-dialog-top-offset));
  max-width: none;
  overflow: hidden;
  padding: var(--hw-dialog-padding);
  pointer-events: auto;
  position: fixed;
  top: var(--hw-dialog-top-offset);
  width: auto;

  &[open] {
    align-items: center;
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
  }

  &::backdrop {
    background-image: linear-gradient(to bottom, rgba(0, 0, 0, 0.6) 50%, white 50%);
  }

  .hw-combobox--ios & {
    position: absolute;
  }
}

.hw-combobox__dialog__label {
  align-self: var(--hw-dialog-label-alignment);
  color: var(--hw-dialog-label-color);
  font-size: var(--hw-dialog-label-size);
  padding: var(--hw-dialog-label-padding);
}

.hw-combobox__dialog__input {
  border: var(--hw-border-width--slim) solid var(--hw-border-color);
  border-radius: var(--hw-border-radius);
  font-size: inherit;
  height: var(--hw-dialog-input-height);
  line-height: var(--hw-dialog-input-height);
  padding: var(--hw-padding--slim) var(--hw-padding--thick);
  text-overflow: ellipsis;
  width: 90%;
}

.hw-combobox__dialog__listbox {
  margin: var(--hw-dialog-listbox-margin);
  overflow: auto;
  padding: 0;
  width: 100%;

  [role="option"] {
    border-radius: var(--hw-border-radius);
    padding: var(--hw-padding--thick);
  }
}

.hw-combobox__chip {
  align-items: center;
  border: var(--hw-border-width--slim) solid var(--hw-border-color);
  border-radius: var(--hw-border-radius);
  display: flex;
  font-size: var(--hw-selection-chip-font-size);
  line-height: var(--hw-line-height);
  padding: var(--hw-padding--slimmer);
  padding-left: var(--hw-padding--slim);
}

.hw-combobox__chip__remover {
  background-image: var(--hw-handle-image--queried);
  background-size: var(--hw-handle-width--queried);
  background-repeat: no-repeat;
  margin-left: var(--hw-padding--slimmer);
  min-height: var(--hw-handle-width--queried);
  min-width: var(--hw-handle-width--queried);
}

.hw-combobox--multiple {
  .hw-combobox__main__wrapper {
    align-items: center;
    display: flex;
    flex-wrap: wrap;
    gap: var(--hw-padding--slimmer);
    /* width: var(--hw-combobox-width--multiple); */

    &:has([data-hw-combobox-chip]) .hw-combobox__input::placeholder {
      color: transparent;
    }
  }

  .hw-combobox__input {
    min-width: calc(var(--hw-combobox-width) / 2);
    flex-grow: 1;
    line-height: var(--hw-line-height--multiple);
    max-width: 100%;
    width: 1rem;
  }
}

.hw_combobox__pagination__wrapper {
  background-color: var(--hw-option-bg-color);

  &:only-child {
    background-color: transparent;
  }
}
